/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import controller.ControllerBarang;
import controller.ControllerNoFaktur;
import controller.ControllerStokBarang;
import controller.ControllerBarangTerjual;
import controller.ControllerPelanggan;
import model.Barang;
import java.io.IOException;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.pdmodel.font.Standard14Fonts;

/**
 *
 * @author Adit
 */
public class Kasir extends javax.swing.JFrame {
    // Inisialisasi model tabel dengan kolom-kolom yang sudah ditentukan
    private ControllerNoFaktur controllerNoFaktur;
    private ControllerBarang controllerBarang;
    private ControllerStokBarang controllerStokBarang;
    private ControllerBarangTerjual controllerBarangTerjual;
    private ControllerPelanggan controllerPelanggan;
    
    private DefaultTableModel model;
    private String selectedKodeBarang;

    /**
     * Creates new form Kasir
     */
    public Kasir() {
        initComponents();
        kodeBarangTextField.grabFocus();
        String[] kolom = {"Kode Barang", "Nama Barang", "Harga", "Qty", "Total"};
        model = new DefaultTableModel(kolom, 0); // 0 menandakan baris awal kosong
        beliTable.setModel(model);
        
        controllerNoFaktur = new ControllerNoFaktur();
        controllerBarang = new ControllerBarang();
        controllerStokBarang = new ControllerStokBarang();
        controllerBarangTerjual = new ControllerBarangTerjual();
        controllerPelanggan = new ControllerPelanggan();

        String nomorFakturBaru = controllerNoFaktur.noFak();
        noFakTextField.setText(nomorFakturBaru);


        // Buat kolom menjadi read-only
        noFakTextField.setEditable(false);
        subTotalTextField.setEditable(false);
        grandTotalTextField.setEditable(false);
        jumlahDiskonTextField.setEditable(false);
        kembalianTextField.setEditable(false);
        
        // Tambahkan DocumentListener untuk diskonTextField dan bayarTextField
        diskonTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                calculateTotal();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                calculateTotal();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                calculateTotal();
            }
        });

        bayarTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                calculateChange();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                calculateChange();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                calculateChange();
            }
        });

        // Tambahkan DocumentListener untuk qtyTextField
        qtyTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateInputButtonState();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateInputButtonState();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateInputButtonState();
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bayarLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        beliTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        kodeBarangTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        namaBarangTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        hargaTextField = new javax.swing.JTextField();
        qtyTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cariButton = new javax.swing.JButton();
        inputButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        noFakTextField = new javax.swing.JTextField();
        subTotalTextField = new javax.swing.JTextField();
        diskonTextField = new javax.swing.JTextField();
        jumlahDiskonTextField = new javax.swing.JTextField();
        grandTotalTextField = new javax.swing.JTextField();
        bayarTextField = new javax.swing.JTextField();
        kembalianTextField = new javax.swing.JTextField();
        simpanButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bayarLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        bayarLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bayarLabel.setText("Rp ");

        beliTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "KODE BARANG", "NAMA BARANG", "HARGA", "QTY", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(beliTable);

        jLabel2.setText("ITEM");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("KODE BARANG");

        kodeBarangTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeBarangTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("NAMA BARANG");

        jLabel5.setText("HARGA");

        hargaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaTextFieldActionPerformed(evt);
            }
        });

        qtyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("QTY");

        cariButton.setText("CARI");
        cariButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariButtonActionPerformed(evt);
            }
        });

        inputButton.setText("INPUT");
        inputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputButtonActionPerformed(evt);
            }
        });

        hapusButton.setText("HAPUS");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kodeBarangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(namaBarangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hargaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(77, 77, 77)
                        .addComponent(jLabel5)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(qtyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cariButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hapusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kodeBarangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namaBarangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hargaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qtyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cariButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hapusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jLabel8.setText("PEMBAYARAN");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("No. Faktur");

        jLabel14.setText("Sub Total");

        jLabel19.setText("Grand Total");

        jLabel17.setText("Diskon (%)");

        jLabel16.setText("Bayar");

        jLabel18.setText("Kembalian");

        jLabel20.setText("Jumlah Diskon");

        subTotalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subTotalTextFieldActionPerformed(evt);
            }
        });

        diskonTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diskonTextFieldActionPerformed(evt);
            }
        });

        grandTotalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grandTotalTextFieldActionPerformed(evt);
            }
        });

        bayarTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bayarTextFieldActionPerformed(evt);
            }
        });

        simpanButton.setText("SIMPAN");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });

        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        backButton.setText("Kembali");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(noFakTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(111, 111, 111)
                        .addComponent(jLabel16))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(diskonTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                .addComponent(subTotalTextField, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19)
                            .addComponent(grandTotalTextField)
                            .addComponent(bayarTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jumlahDiskonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(kembalianTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(simpanButton, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                .addGap(165, 165, 165))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel14)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(noFakTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grandTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(diskonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bayarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jumlahDiskonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kembalianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(simpanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(33, 33, 33)
                .addComponent(backButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bayarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(bayarLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(362, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void diskonTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diskonTextFieldActionPerformed
        // TODO add your handling code here:
        bayarTextField.grabFocus();
    }//GEN-LAST:event_diskonTextFieldActionPerformed

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanButtonActionPerformed
        // TODO add your handling code here:
        // Pastikan total sudah dihitung sebelum menyimpan
        calculateTotal();

        // Ambil data dari field input yang relevan
        String noFaktur = noFakTextField.getText();
        int subTotal = Integer.parseInt(subTotalTextField.getText());

        // Inisialisasi diskon dengan nilai default 0
        int diskon = 0;
        try {
            diskon = Integer.parseInt(diskonTextField.getText());
        } catch (NumberFormatException e) {
            diskon = 0; // Jika diskon kosong atau tidak valid, default ke 0
        }

        int jumlahDiskon = Integer.parseInt(jumlahDiskonTextField.getText());
        int grandTotal = Integer.parseInt(grandTotalTextField.getText());
        int bayar = Integer.parseInt(bayarTextField.getText());
        int kembalian = Integer.parseInt(kembalianTextField.getText());

        int rowCount = model.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            String kodeBarang = (String) model.getValueAt(i, 0);
            String namaBarang = (String) model.getValueAt(i, 1);
            int harga = (int) model.getValueAt(i, 2);
            int qty = (int) model.getValueAt(i, 3);
            int total = (int) model.getValueAt(i, 4);

            // Periksa apakah stok mencukupi
            Barang barang = controllerBarang.getBarangByKodeBarang(kodeBarang);
            if (barang != null && barang.getStok() >= qty) {
                controllerStokBarang.updateStokBarang(kodeBarang, qty);
                controllerBarangTerjual.insertBarangTerjual(noFaktur, kodeBarang, namaBarang, harga, qty, total);
            } else {
                // Tampilkan pesan stok tidak mencukupi
                JOptionPane.showMessageDialog(this, "Stok untuk barang " + namaBarang + " tidak mencukupi", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Hentikan proses jika ada stok yang tidak mencukupi
            }
        }

        controllerPelanggan.simpanPelanggan(noFaktur, subTotal, diskon, jumlahDiskon, grandTotal, bayar, kembalian);
        
         // Buat dan simpan nota sebagai file PDF
        buatNotaPDF();

        // Tampilkan pesan sukses
        JOptionPane.showMessageDialog(this, "Data berhasil disimpan", "Sukses", JOptionPane.INFORMATION_MESSAGE);

        // Bersihkan tabel dan field input setelah menyimpan
        model.setRowCount(0);
        kodeBarangTextField.setText("");
        namaBarangTextField.setText("");
        hargaTextField.setText("");
        qtyTextField.setText("");
        subTotalTextField.setText("");
        diskonTextField.setText("");
        jumlahDiskonTextField.setText("");
        grandTotalTextField.setText("");
        bayarTextField.setText("");
        kembalianTextField.setText("");

        // Buat nomor faktur baru
        String nomorFakturBaru = controllerNoFaktur.noFak();
        noFakTextField.setText(nomorFakturBaru);
    }//GEN-LAST:event_simpanButtonActionPerformed

    private void grandTotalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grandTotalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grandTotalTextFieldActionPerformed

    private void cariButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariButtonActionPerformed
        // TODO add your handling code here:
        CariBarang cariBarang = new CariBarang("Kasir");
        cariBarang.setTitle("PILIH BARANG");
        cariBarang.setVisible(true);
    }//GEN-LAST:event_cariButtonActionPerformed

    private void inputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputButtonActionPerformed
        // TODO add your handling code here:
        // Ambil data dari field input
        String kodeBarang = kodeBarangTextField.getText();
        String namaBarang = namaBarangTextField.getText();
        String hargaText = hargaTextField.getText();
        String qtyText = qtyTextField.getText();

        // Validasi input (opsional)
        if (kodeBarang.isEmpty() || namaBarang.isEmpty() || hargaText.isEmpty() || qtyText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int harga = Integer.parseInt(hargaText);
        int qty = Integer.parseInt(qtyText);

        // Cek stok barang
        int stok = controllerStokBarang.getStokBarang(kodeBarang);
        if (qty > stok) {
            JOptionPane.showMessageDialog(this, "Stok tidak mencukupi", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int total = harga * qty; // Hitung total harga

        // Masukkan data ke dalam tabel
        Object[] data = {kodeBarang, namaBarang, harga, qty, total};
        model.addRow(data);

        // Bersihkan field input setelah menambahkan data
        kodeBarangTextField.setText("");
        namaBarangTextField.setText("");
        hargaTextField.setText("");
        qtyTextField.setText("");
        kodeBarangTextField.grabFocus();

        // Hitung subtotal dan total lainnya
        calculateTotal();
    }//GEN-LAST:event_inputButtonActionPerformed

    private void qtyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextFieldActionPerformed
        // TODO add your handling code here:
        inputButtonActionPerformed(evt);
    }//GEN-LAST:event_qtyTextFieldActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        // TODO add your handling code here:
        // Pastikan ada baris yang dipilih di tabel
        int selectedRow = beliTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus baris ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return; // Batal jika pengguna tidak mengonfirmasi
        }

        // Hapus baris dari model tabel
        model.removeRow(selectedRow);

        // Hitung ulang subtotal dan total lainnya
        calculateTotal();
    }//GEN-LAST:event_hapusButtonActionPerformed

    private void kodeBarangTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeBarangTextFieldActionPerformed
        // TODO add your handling code here:
        String kodeBarang = kodeBarangTextField.getText().trim();
    
        if (!kodeBarang.isEmpty()) {
            // Panggil metode dari database untuk mendapatkan Barang berdasarkan kodeBarang
            Barang barang = controllerBarang.getBarangByKodeBarang(kodeBarang);

            if (barang != null) {
                // Isi namaBarangTextField dan hargaTextField dengan nilai dari database
                namaBarangTextField.setText(barang.getNamaBarang());
                hargaTextField.setText(String.valueOf(barang.getHarga()));
            } else {
                // Jika barang tidak ditemukan, mungkin tampilkan pesan atau kosongkan field
                namaBarangTextField.setText("");
                hargaTextField.setText("");
            }
        }
        qtyTextField.grabFocus();
    }//GEN-LAST:event_kodeBarangTextFieldActionPerformed

    private void hargaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaTextFieldActionPerformed

    private void subTotalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subTotalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subTotalTextFieldActionPerformed

    private void bayarTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bayarTextFieldActionPerformed
        // TODO add your handling code here:
        simpanButtonActionPerformed(evt);
    }//GEN-LAST:event_bayarTextFieldActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        // Mengosongkan semua textfield di bagian item
        kodeBarangTextField.setText("");
        namaBarangTextField.setText("");
        hargaTextField.setText("");
        qtyTextField.setText("");
        diskonTextField.setText("");
        jumlahDiskonTextField.setText("");
        subTotalTextField.setText("");
        grandTotalTextField.setText("");
        bayarTextField.setText("");
        kembalianTextField.setText("");
        bayarLabel.setText("Rp");

        // Menghapus semua isi dari beliTable
        model.setRowCount(0);

        // Set bayarTextField kembali menjadi 0
        bayarTextField.setText("0");
    }//GEN-LAST:event_resetButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        Utama utama = new Utama();
        utama.setVisible(true);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kasir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kasir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel bayarLabel;
    private javax.swing.JTextField bayarTextField;
    private javax.swing.JTable beliTable;
    private javax.swing.JButton cariButton;
    private javax.swing.JTextField diskonTextField;
    private javax.swing.JTextField grandTotalTextField;
    private javax.swing.JButton hapusButton;
    public static javax.swing.JTextField hargaTextField;
    private javax.swing.JButton inputButton;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jumlahDiskonTextField;
    private javax.swing.JTextField kembalianTextField;
    public static javax.swing.JTextField kodeBarangTextField;
    public static javax.swing.JTextField namaBarangTextField;
    private javax.swing.JTextField noFakTextField;
    public static javax.swing.JTextField qtyTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton simpanButton;
    private javax.swing.JTextField subTotalTextField;
    // End of variables declaration//GEN-END:variables
    
    private void loadTable(List<Object[]> dataList) {
        // Bersihkan semua baris yang ada di model tabel
        model.setRowCount(0);

        // Iterasi melalui dataList dan masukkan ke dalam model tabel
        for (Object[] data : dataList) {
            model.addRow(data);
        }
    }
    
    private void calculateTotal() {
        int rowCount = model.getRowCount();
        int subtotal = 0;

        // Hitung subtotal
        for (int i = 0; i < rowCount; i++) {
            subtotal += (int) model.getValueAt(i, 4);
        }

        subTotalTextField.setText(String.valueOf(subtotal));

        // Hitung jumlah diskon
        int diskon = 0;
        try {
            diskon = Integer.parseInt(diskonTextField.getText().trim());
        } catch (NumberFormatException e) {
            diskon = 0; // Default diskon jika input tidak valid
        }

        int jumlahDiskon = (subtotal * diskon) / 100;
        jumlahDiskonTextField.setText(String.valueOf(jumlahDiskon));

        // Hitung grand total
        int grandTotal = subtotal - jumlahDiskon;
        grandTotalTextField.setText(String.valueOf(grandTotal));
        
        // Update nilai bayarLabel
        bayarLabel.setText("Rp" + grandTotal);

        // Hitung kembalian
        calculateChange();
    }

    private void calculateChange() {
        int grandTotal = 0;
        try {
            grandTotal = Integer.parseInt(grandTotalTextField.getText().trim());
        } catch (NumberFormatException e) {
            grandTotal = 0; // Default grand total jika input tidak valid
        }

        int bayar = 0;
        try {
            bayar = Integer.parseInt(bayarTextField.getText().trim());
        } catch (NumberFormatException e) {
            bayar = 0; // Default bayar jika input tidak valid
        }

        int kembalian = bayar - grandTotal;
        kembalianTextField.setText(String.valueOf(kembalian));
    }

    private void updateInputButtonState() {
        inputButton.setEnabled(!qtyTextField.getText().trim().isEmpty());
    }
    
    private void buatNotaPDF() {
        // Mengambil nomor faktur dari input
        String noFaktur = noFakTextField.getText();

        // Nama file dan path untuk menyimpan PDF
        String fileName = "Nota_" + noFaktur + ".pdf";
        String filePath = "C:\\Users\\Adit\\OneDrive\\Documents\\Kuliah\\Semester 4\\PBO\\P13\\isengUas\\Nota\\" + fileName;

        // Ukuran halaman A4 (210mm x 297mm)
//        float pageWidth = PDRectangle.A4.getWidth();
//        float pageHeight = PDRectangle.A4.getHeight();

        // Membuat dokumen PDF dan halaman baru
        PDDocument document = new PDDocument();
        PDPage page = new PDPage(PDRectangle.A4);
        document.addPage(page);

        try {
            // Konten stream untuk menulis ke halaman PDF
            try (PDPageContentStream contentStream = new PDPageContentStream(document, page)) {
                // Set font untuk teks judul
                contentStream.setFont(new PDType1Font(Standard14Fonts.FontName.HELVETICA_BOLD), 12);

                contentStream.setLeading(16.0f);
                // Judul Nota Penjualan
                contentStream.beginText();
                contentStream.newLineAtOffset(50, 750);
                contentStream.showText("======= NOTA PENJUALAN =======");
                contentStream.newLine();
                contentStream.showText("No Faktur: " + noFaktur);

                // Header DETAIL BARANG
                contentStream.setFont(new PDType1Font(Standard14Fonts.FontName.HELVETICA_BOLD), 12);
                contentStream.newLine();
                contentStream.showText("======= DETAIL BARANG =======");
                contentStream.newLine();
                contentStream.setFont(new PDType1Font(Standard14Fonts.FontName.HELVETICA_BOLD), 10);
                contentStream.showText("Kode Barang   Nama Barang    Harga    Qty    Total");

                // Data Barang
//                float yPosition = pageHeight - 150; // Mulai posisi Y untuk data barang
                for (int i = 0; i < beliTable.getRowCount(); i++) {
                    String kodeBarang = beliTable.getValueAt(i, 0).toString();
                    String namaBarang = beliTable.getValueAt(i, 1).toString();
                    String harga = beliTable.getValueAt(i, 2).toString();
                    String qty = beliTable.getValueAt(i, 3).toString();
                    String total = beliTable.getValueAt(i, 4).toString();

                    contentStream.setFont(new PDType1Font(Standard14Fonts.FontName.HELVETICA_BOLD), 10);
                    contentStream.newLine();
                    contentStream.showText(kodeBarang + "   " + namaBarang + "   " + harga + "   " + qty + "   " + total);

                }

                // Total dan informasi akhir
                contentStream.setFont(new PDType1Font(Standard14Fonts.FontName.HELVETICA_BOLD), 10);
                contentStream.newLine();
                contentStream.showText("Subtotal: " + subTotalTextField.getText());
                contentStream.newLine();
                contentStream.showText("Diskon: " + diskonTextField.getText() + "% (" + jumlahDiskonTextField.getText() + ")");
                contentStream.newLine();
                contentStream.showText("Grand Total: " + grandTotalTextField.getText());
                contentStream.newLine();
                contentStream.showText("Bayar: " + bayarTextField.getText());
                contentStream.newLine();
                contentStream.showText("Kembalian: " + kembalianTextField.getText());
                contentStream.newLine();
                contentStream.setFont(new PDType1Font(Standard14Fonts.FontName.HELVETICA_OBLIQUE), 8);
                contentStream.showText("Terima kasih atas kunjungan Anda!");
                contentStream.newLine();
                contentStream.showText("====================================");
                contentStream.endText();
            }

            // Simpan dokumen dan tutup
            document.save(filePath);
            System.out.println("Nota berhasil disimpan sebagai file: " + fileName);

            // Tampilkan pesan sukses
            JOptionPane.showMessageDialog(this, "Nota berhasil disimpan sebagai file: " + fileName, "Sukses", JOptionPane.INFORMATION_MESSAGE);

        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan nota: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                document.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

}



